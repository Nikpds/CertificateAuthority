{"version":3,"sources":["styles/utilities.module.sass","assets/OpenSSL_logo.png","certificates/certificate/Certificate.module.sass","context/AuthContext.js","layout/Toolbar/Toolbar.js","layout/Sidebar.js","layout/Layout.js","services/LocalStorage.js","services/UseFetch.js","auth/Login/Login.js","layout/Home.js","certificates/certificate/certificate-steps/certificate-steps.js","certificates/certificate/request/Request.js","certificates/certificate/privateKey/PrivateKey.js","certificates/certificate/cert/Cert.js","certificates/certificate/confirmInfo/ConfirmInfo.js","certificates/certificate/download-files/DownloadFiles.js","certificates/certificate/Certificate.js","components/filemanager/Folder.js","components/filemanager/FileManager.js","certificates/certificate/list-certificates/ListCertificates.js","certificates/issuedCertificate/IssuedCerts.js","services/Routes.js","App.js","serviceWorker.js","auth/AuthProvider.js","index.js","layout/Toolbar/Toolbar.module.sass"],"names":["module","exports","IsFullheight","IsFullwidth","Mauto","__webpack_require__","p","Row","AuthContext","React","createContext","isAuthenticated","signIn","signOut","Header","Toolbar","props","auth","useContext","react_default","a","createElement","className","classes","menu","mode","Menu","Item","key","Menu_Item_hover","react_router_dom","to","Menu_Item","icon","type","Right","join","onClick","Sider","Sidebar","_useState","useState","_useState2","Object","slicedToArray","collapsed","setCollapsed","style","width","theme","height","Content","Layout","cssHeight","utcss","toolbar","layout_Toolbar_Toolbar","sidebar","layout_Sidebar","Fragment","layout","children","storage","prefix","process","REACT_APP_STORAGE_PREFIX","get","value","localStorage","getItem","JSON","parse","set","setItem","stringify","remove","removeItem","api","callFetch","_ref","asyncToGenerator","regenerator_default","mark","_callee2","url","method","data","result","wrap","_context2","prev","next","fetch","headers","body","then","_ref2","_callee","res","message","_context","ok","abrupt","json","sent","notification","description","Message","stop","_x4","apply","this","arguments","catch","_x","_x2","_x3","h","Headers","append","token","LocalStorage","concat","Login","username","setUsername","_useState3","_useState4","password","setPassword","loginHandler","es_form","typography","Title","level","fontSize","marginRight","twoToneColor","color","name","autoComplete","onChange","e","target","placeholder","es_button","block","shape","ghost","Paragraph","Home","row","paddingTop","col","span","offset","src","logo","textAlign","strong","Step","steps","certificateSteps","direction","size","current","step","title","Request","country","state","locality","organization","cn","email","req","useReq","inputeHandler","objectSpread","defineProperty","Request_Title","rotate","Request_Paragraph","labelCol","lg","xl","wrapperCol","label","input","unit","PrivateKey","privateKey","setPrivateKey","PrivateKey_Title","PrivateKey_Paragraph","code","Cert","certificate","setCertificate","duration","setDuration","Cert_Title","Cert_Paragraph","min","max","Text","confirm","cert","crt","setCrt","editHandler","includes","field","split","request","submitCertHandler","crtCopy","expires","d","Date","expiredDate","getDate","getMonth","getFullYear","react_router","render","history","ConfirmInfo_Title","ConfirmInfo_Paragraph","editable","v","push","DownloadFiles","DownloadCert","window","location","href","DownloadFiles_Title","DownloadFiles_Paragraph","Certificate","setStep","setCert","useEffect","stepComponent","nextStepHandler","finalStep","privateKey_PrivateKey","request_Request","cert_Cert","years","year","confirmInfo_ConfirmInfo","download_files_DownloadFiles","css","certificate_steps","Folder","files","setFiles","searchValue","setSearchValue","_useState5","_useState6","pageSize","setPageSize","getData","path","filesToDisplay","filter","file","toUpperCase","indexOf","list","itemLayout","dataSource","pagination","showSizeChanger","onShowSizeChange","val","header","badge","count","length","Search","onSearch","renderItem","item","actions","popconfirm","onConfirm","es_message","info","filesCopy","toConsumableArray","index","findIndex","f","splice","okText","cancelText","skeleton","avatar","loading","Meta","FileManager","justify","FileManager_Title","FileManager_Text","filemanager_Folder","PAGINATION","defaultCurrent","defaultPageSize","showTotal","total","range","lastPagination","page","sort","ListCertificates","columns","dataIndex","sorter","date","now","moment","diff","diffDays","Expires","text","divider","DeleteCert","id","setLoading","setTotal","certId","pageToLoad","errorCallBack","content","error","ListCertificates_Title","ListCertificates_Text","table","rowKey","pag","filters","sortField","subfields","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","subfield","substring","err","return","order","replace","IssuedCertificateForm","create","owner","certData","setCertData","updateFieldHandler","_d","updateNestedFieldHandler","clearHandler","form","resetFields","getFieldDecorator","assign","IssuedCerts_Title","rules","required","date_picker","marginTop","float","validateFields","fieldsValue","Button","addonBefore","fullAccess","exact","component","IssuedCertificate","unAuthorized","withRouter","routes","cssClass","App","layout_Layout","react","fallback","Boolean","hostname","match","AuthProvider","session","getSession","jwt","decode","exp","valueOf","isExpired","setIsAuthenticated","Provider","locale","app","auth_AuthProvider","locale_provider","el_GR","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.adf261ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"IsFullheight\":\"utilities_IsFullheight__1xbs4\",\"IsFullwidth\":\"utilities_IsFullwidth__1eNHt\",\"Mauto\":\"utilities_Mauto__2xXJn\"};","module.exports = __webpack_public_path__ + \"static/media/OpenSSL_logo.aa1b0023.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"Certificate_Row__V6Ymf\"};","import React from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n    isAuthenticated: true,\r\n    signIn: () => { },\r\n    signOut: () => { }\r\n});","import React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../../context/AuthContext'\r\nimport { Menu, Icon, Layout } from 'antd';\r\nimport classes from './Toolbar.module.sass';\r\nconst { Header } = Layout;\r\nconst Toolbar = props => {\r\n    const auth = useContext(AuthContext);\r\n    return (\r\n        <Header className={classes.Header}>\r\n            <Menu mode=\"horizontal\" className={classes.Menu}>\r\n                <Menu.Item key=\"1\" className={classes.Menu_Item_hover}>\r\n                    <NavLink to=\"/\" className={classes.Menu_Item}><Icon type=\"home\" />Αρχική</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"6\" className={[classes.Right, classes.Menu_Item].join(' ')} onClick={auth.signOut}>\r\n                    <Icon type=\"logout\" />Αποσύνδεση\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Header>\r\n\r\n    );\r\n};\r\n\r\nexport default Toolbar;","import React, { useState } from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\nconst { Sider } = Layout;\r\n\r\nconst Sidebar = () => {\r\n    const [collapsed, setCollapsed] = useState(false)\r\n\r\n    const toggleCollapsed = () => {\r\n        setCollapsed(!collapsed);\r\n    }\r\n    return (\r\n        <Sider style={{ width: 256 }} collapsed={collapsed}>\r\n            <Menu\r\n                mode=\"inline\"\r\n                theme=\"dark\"\r\n                style={{ height: '100%' }} >\r\n                <Menu.Item key=\"0\" onClick={toggleCollapsed}>\r\n                    <Icon type={collapsed ? 'menu-unfold' : 'menu-fold'} />\r\n                    <span>Ελαχιστοποίηση</span>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"1\">\r\n                    <NavLink to=\"/cert/certificates\" >\r\n                        <Icon type=\"safety-certificate\" /><span>Πιστοποιητικά</span>\r\n                    </NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <NavLink to=\"/cert/files\">\r\n                        <Icon type=\"folder\" /><span>Φάκελοι-Αρχεία</span>\r\n                    </NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\">\r\n                    <NavLink to=\"/certificate/new\" >\r\n                        <Icon type=\"plus\" /><span>Νέο Πιστοποιητικό</span></NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\">\r\n                    <NavLink to=\"/certificate/issued\" >\r\n                        <Icon type=\"safety-certificate\" /><span>Εισαγωγή</span></NavLink>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Sider>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React, { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport Toolbar from './Toolbar/Toolbar';\r\nimport { Layout as LayoutC } from 'antd';\r\nimport utcss from '../styles/utilities.module.sass';\r\nimport Sidebar from './Sidebar';\r\n\r\nconst { Content } = LayoutC;\r\n\r\nconst Layout = props => {\r\n    const auth = useContext(AuthContext)\r\n    const cssHeight = auth.isAuthenticated ? 'calc-h' : utcss.IsFullheight;\r\n    const toolbar = auth.isAuthenticated ? <Toolbar /> : null;\r\n    const sidebar = auth.isAuthenticated ? <Sidebar /> : null;\r\n    return (\r\n        <React.Fragment>\r\n            <LayoutC>\r\n                {toolbar}\r\n            </LayoutC>\r\n            <LayoutC className={cssHeight}>\r\n                {sidebar}\r\n                <Content className={cssHeight}>\r\n                    {props.children}\r\n                </Content>\r\n            </LayoutC>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Layout;","const storage = {\r\n  prefix: process.env.REACT_APP_STORAGE_PREFIX || '',\r\n  get: key => {\r\n    const value = localStorage.getItem(storage.prefix + key)\r\n    return JSON.parse(value)\r\n  },\r\n  set: (key, value) => {\r\n    return localStorage.setItem(storage.prefix + key, JSON.stringify(value))\r\n  },\r\n  remove: key => {\r\n    localStorage.removeItem(storage.prefix + key)\r\n  }\r\n}\r\n\r\nexport default storage\r\n","import { notification } from 'antd';\r\nimport LocalStorage from '../services/LocalStorage';\r\nexport const  api = 'http://11.1.9.96:64331/api/'\r\nconst callFetch = async (url, method, data) => {\r\n\r\n    const result = await (await fetch(api + url, {\r\n        method: method,\r\n        headers: headers(),\r\n        body: data ? JSON.stringify(data) : null\r\n    }).then(async res => {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            const message = await res.json();\r\n            notification['error']({\r\n                message: 'Σφάλμα',\r\n                description: message.Message\r\n            });\r\n            return null;\r\n        }\r\n    }).catch(() => {\r\n        // to do error handling\r\n    }));\r\n\r\n    return result;\r\n}\r\nexport default callFetch;\r\n\r\nconst headers = () => {\r\n    const h = new Headers();\r\n    h.append('Content-Type', 'application/json');\r\n    const token = LocalStorage.get('token');\r\n    if (token) {\r\n        h.append('Authorization', `Bearer ${token}`);\r\n    }\r\n    return h;\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport { Form, Icon, Button, Typography as T } from 'antd';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport callFetch from '../../services/UseFetch';\r\nimport './Login.css';\r\nconst Login = props => {\r\n    const auth = useContext(AuthContext);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const usernameHandler = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n    const loginHandler = async () => {\r\n        const body = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        callFetch('auth', 'POST', body).then(res => {\r\n            if (res && res.token) {\r\n                auth.signIn(res.token);\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <Form className=\"login-container\">\r\n            <div className=\"login-card\">\r\n                <div className=\"login-card-content\">\r\n                    <div className=\"header\">\r\n                        <T.Title level={1}> <Icon type=\"safety-certificate\" style={{ fontSize: 50, marginRight: 10 }}\r\n                            theme=\"twoTone\" twoToneColor=\"#711411\" />\r\n                            <span style={{ color: 'red' }}>Open</span><span style={{ color: 'white' }}>SSL</span></T.Title>\r\n                    </div>\r\n                    <div className=\"form\">\r\n                        <div className=\"form-field username\">\r\n                            <div className=\"icon\">  <Icon type=\"user\" /> </div>\r\n                            <input type=\"text\" name=\"username\" autoComplete=\"username\"\r\n                                value={username} onChange={usernameHandler} placeholder=\"Username\" />\r\n                        </div>\r\n                        <div className=\"form-field password\">\r\n                            <div className=\"icon\"> <Icon type=\"lock\" /></div>\r\n                            <input type=\"password\" placeholder=\"Password\" autoComplete=\"password\"\r\n                                value={password} onChange={passwordHandler} />\r\n                        </div>\r\n                        <Button type=\"submit\" block shape=\"round\" ghost onClick={loginHandler}> Σύνδεση </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\nexport default Login;","import React, { } from 'react';\r\nimport { } from 'antd';\r\nimport { Typography, Row, Col } from 'antd';\r\nimport logo from '../assets//OpenSSL_logo.png';\r\nconst { Title, Paragraph } = Typography;\r\n\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Row style={{ paddingTop: 40 }}>\r\n      <Col span={12} offset={1}>\r\n        <Paragraph><img src={logo} /> </Paragraph>\r\n        <Paragraph style={{ fontSize: 16, textAlign: 'justify' }} strong>Το OpenSSL είναι µια βιβλιοθήκη κρυπτογράφησης για την υλοποίηση των πρωτοκόλλων\r\n  SSL (Secure Sockets Layer) και TLS (Transport Layer Security). Το πρόγραµµα openssl\r\n  χρησιµοποιεί συναρτήσεις της βιβλιοθήκης OpenSSL για τη δηµιουργία κλειδιών τόσο\r\n  συµµετρικής όσο και ασύµµετρης κρυπτογράφησης, για την υλοποίηση διαδικασιών\r\n  κρυπτογράφησης και αποκρυπτογράφησης καθώς και για τις διαδικασίες υπογραφής και\r\nεπαλήθευσης.</Paragraph>\r\n        <Title level={4}>Τρόπος λειτουργίας</Title>\r\n        <Paragraph style={{ fontSize: 16, textAlign: 'justify' }} strong>\r\n          Το HTTPS δεν είναι ξεχωριστό πρωτόκολλο όπως μερικοί νομίζουν, αλλά αναφέρεται\r\n          στον συνδυασμό του απλού HTTP πρωτοκόλλου και των δυνατοτήτων κρυπτογράφησης που παρέχει το\r\n          πρωτόκολλο Secure Sockets Layer (SSL). Η κρυπτογράφηση που χρησιμοποιείται διασφαλίζει ότι\r\n          τα κρυπτογραφημένα δεδομένα δεν θα μπορούν να υποκλαπούν από άλλους κακόβουλους χρήστες ή\r\n          από επιθέσεις man-in-the-middle. Δεν σταματάει όμως εδώ, πρωτόκολλο με πρωτόκολλο έχει διαφορά\r\n          στα αποτελέσματα κατάταξης σε συνδυασμό με την ασφάλεια, για κάθε ιστοσελίδα.\r\n          <Paragraph style={{ fontSize: 16, textAlign: 'justify' }} strong>\r\n          </Paragraph>\r\n          Για να χρησιμοποιηθεί το HTTPS σε έναν server, θα πρέπει ο διαχειριστής του να εκδώσει ένα\r\n          πιστοποιητικό δημοσίου κλειδιού. Σε servers που χρησιμοποιούν το λειτουργικό σύστημα UNIX αυτό\r\n          μπορεί να γίνει μέσω του προγράμματος OpenSSL. Στην συνέχεια το πιστοποιητικό αυτό θα πρέπει να\r\n          υπογραφεί από μία αρχή πιστοποίησης (certificate authority), η οποία πιστοποιεί ότι ο εκδότης του\r\n          πιστοποιητικού είναι νομότυπος και ότι το πιστοποιητικό είναι έγκυρο. Με τον τρόπο αυτό οι χρήστες\r\n          μπορούν να δουν την υπογραφή της αρχής πιστοποίησης και να βεβαιωθούν ότι το πιστοποιητικό είναι έγκυρο\r\n          και ότι κανένας κακόβουλος χρήστης δεν το έχει πλαστογραφήσει.\r\n        </Paragraph>\r\n      </Col>\r\n\r\n      <Col span={10} offset={1}>\r\n        <Paragraph>\r\n\r\n        </Paragraph>\r\n      </Col>\r\n    </Row >\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Steps } from 'antd';\r\n\r\nconst Step = Steps.Step;\r\nconst certificateSteps = props => {\r\n    return (\r\n        <React.Fragment>\r\n            <h3>Your Certificate is five steps away!</h3>\r\n            <Steps direction=\"vertical\" size=\"small\" current={props.step}>\r\n                <Step title=\"Private Key\" description=\"Create your private key.\" />\r\n                <Step title=\"Certificate Request\" description=\"Fill in your certificate information\" />\r\n                <Step title=\"Create Certificate\" description=\"Your Certificate will be create.\" />\r\n                <Step title=\"Confirm Your Info\" description=\"Confirm your previous info and send the request\" />\r\n                <Step title=\"Finish\" description=\"Download your files\" />\r\n            </Steps>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default certificateSteps;","import React, { useState } from 'react';\r\nimport { Form, Icon, Input, Button, Typography } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\nconst Request = props => {\r\n    const [req, useReq] = useState({\r\n        country: '',\r\n        state: '',\r\n        locality: '',\r\n        organization: '',\r\n        cn: '',\r\n        email: ''\r\n    });\r\n    const inputeHandler = (e) => {\r\n        useReq({\r\n            ...req,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    const formItemLayout = {\r\n        labelCol: {\r\n            lg: { span: 24 },\r\n            xl: { span: 10 },\r\n        },\r\n        wrapperCol: {\r\n            lg: { span: 24 },\r\n            xl: { span: 14 },\r\n        },\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={2}><Icon type=\"form\" style={{ fontSize: 25 }} rotate={270} /> Certificate Request Info</Title>\r\n            <Paragraph>Fill the form for your certificate info.</Paragraph>\r\n            <Form {...formItemLayout} >\r\n                <Form.Item label=\"Country Name (2 letter code)\">\r\n                    <Input type=\"text\" placeholder=\"\" name=\"country\"\r\n                        value={req.country} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item label=\"State or Province Name (full name)\">\r\n                    <Input type=\"text\" placeholder=\"\" name=\"state\"\r\n                        value={req.state} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Locality Name (eg, city)\">\r\n                    <Input type=\"text\" placeholder=\"\" name=\"locality\"\r\n                        value={req.locality} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Organization Name (eg, company)\">\r\n                    <Input type=\"text\" placeholder=\"\" name=\"organization\"\r\n                        value={req.organization} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Organization Unit (eg, IT)\">\r\n                    <Input type=\"text\" placeholder=\"\" name=\"unit\"\r\n                        value={req.unit} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Common Name (e.g. server FQDN or YOUR name)\">\r\n                    <Input type=\"text\" placeholder=\"\" name=\"cn\"\r\n                        value={req.cn} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item label=\"Email Address\">\r\n                    <Input type=\"email\" placeholder=\"\" name=\"email\"\r\n                        value={req.email} onChange={inputeHandler} />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" onClick={() => props.next(2, req, 'request')}>\r\n                        Next Step\r\n                    <Icon type=\"step-forward\" />\r\n                    </Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Request;","import React, { useState } from 'react';\r\nimport { Input, Typography, Icon, Button, Form } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\nconst PrivateKey = props => {\r\n    const [privateKey, setPrivateKey] = useState();\r\n\r\n    const inputHandler = (e) => {\r\n        setPrivateKey(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={2}><Icon type=\"key\" style={{ fontSize: 25 }} rotate={270} /> Type the name of your Key</Title>\r\n            <Paragraph>Note: The generated file will have .key.pem extention</Paragraph>\r\n            <Paragraph code={true}>Example: if your given name is exampleKey then the generated key will be named exampleKey.key.pem</Paragraph>\r\n            <Form.Item>\r\n                <Input placeholder=\"Private Key Name\" value={privateKey} onChange={inputHandler} />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" onClick={() => props.next(1, privateKey, 'privateKey')}>\r\n                    Next Step\r\n                    <Icon type=\"step-forward\" />\r\n                </Button>\r\n            </Form.Item>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default PrivateKey;","import React, { useState } from 'react';\r\nimport { Form, Icon, Input, Typography, Button } from 'antd';\r\nconst { Title, Paragraph } = Typography;\r\nconst Cert = props => {\r\n    const [certificate, setCertificate] = useState('');\r\n    const [duration, setDuration] = useState(1);\r\n\r\n    const certificateHandler = (e) => {\r\n        setCertificate(e.target.value);\r\n    }\r\n    const durationHandler = (e) => {\r\n        setDuration(e.target.value);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={2}><Icon type=\"form\" style={{ fontSize: 25 }} rotate={270} />&nbsp;\r\n                Certificate Title</Title>\r\n            <Paragraph>Note: The generated file will have .cert.pem extention</Paragraph>\r\n            <Paragraph code={true}>Example: if your name is mydomain then the generated certificate will be named mydomain.cert.pem</Paragraph>\r\n            <Form.Item label=\"Certificate Name\">\r\n                <Input prefix={<Icon type=\"edit\" />} value={certificate}\r\n                    onChange={certificateHandler}\r\n                    type=\"text\" placeholder=\"192.168.1.1 or www.mydomain.gr\" />\r\n            </Form.Item>\r\n            <Form.Item label=\"Duration (1 - 10 years)\">\r\n                <Input prefix={<Icon type=\"calendar\" />}\r\n                    value={duration} onChange={durationHandler}\r\n                    type=\"number\" min=\"1\" max=\"10\" placeholder=\"5 years\" />\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" onClick={() => props.next(certificate,duration)}>\r\n                    Next Step\r\n                    <Icon type=\"step-forward\" />\r\n                </Button>\r\n            </Form.Item>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Cert;","import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Form, Icon, Typography, Button } from 'antd';\r\nimport './ConfirmInfo.sass';\r\nimport callFetch from '../../../services/UseFetch';\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst confirm = props => {\r\n    const [crt, setCrt] = useState({ ...props.cert });\r\n\r\n    const editHandler = (e, name) => {\r\n        if (name.includes('request')) {\r\n            const field = name.split('.')[1];\r\n            setCrt({\r\n                ...crt,\r\n                request: {\r\n                    ...crt.request,\r\n                    [field]: e\r\n                }\r\n            })\r\n        } else {\r\n            setCrt({\r\n                ...crt,\r\n                [name]: e\r\n            })\r\n        }\r\n    }\r\n\r\n    const submitCertHandler = () => {\r\n        let crtCopy = { ...crt };\r\n        delete crtCopy.expires;\r\n        callFetch('main/generate', 'POST', crtCopy).then(res => {\r\n            if (res) {\r\n                props.next(4);\r\n            }\r\n        });\r\n    }\r\n\r\n    const d = new Date(crt.expires)\r\n    const expiredDate = d.getDate() + '-' + d.getMonth() + '-' + d.getFullYear();\r\n    return (\r\n        <Route render={({ history }) => (\r\n            <React.Fragment>\r\n                <Title level={2}><Icon type=\"form\" style={{ fontSize: 25, marginRight: 10 }} rotate={270} />\r\n                    Confirm your Info</Title>\r\n                <Paragraph>Note: Confirm your information and continue .</Paragraph>\r\n                <Paragraph>The next step will create all the necessary files for your Certificate.</Paragraph>\r\n                <Title level={3}><Icon type=\"read\" style={{ fontSize: 22, marginRight: 10 }} /> Your Request</Title>\r\n\r\n                <Form labelCol={{ span: 5 }} wrapperCol={{ span: 10 }}>\r\n                    <Form.Item label=\"Private \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'privateKey') }}>\r\n                            {crt.privateKey}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Certificate  \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'certificate') }}>\r\n                            {crt.certificate}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Duration \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'duration') }}>\r\n                            {crt.duration + ' years'}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Expires \">\r\n                        <Text >\r\n                            {expiredDate}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Country \">\r\n                        <Text name=\"\" editable={{ onChange: (v) => editHandler(v, 'request.country') }}>\r\n                            {crt.request.country}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"State \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'request.state') }}>\r\n                            {crt.request.state}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Locality \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'request.locality') }}>\r\n                            {crt.request.locality}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Organization \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'request.organization') }}>\r\n                            {crt.request.organization}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Common Name \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'request.cn') }}>\r\n                            {crt.request.cn}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email \">\r\n                        <Text editable={{ onChange: (v) => editHandler(v, 'request.email') }}>\r\n                            {crt.request.email}\r\n                        </Text>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"secondary\" style={{ marginRight: 10 }}\r\n                            onClick={() => { history.push('/') }} >\r\n                            Cancel\r\n                    </Button>\r\n                        <Button type=\"primary\" onClick={submitCertHandler}>\r\n                            Create Certificates\r\n                    <Icon type=\"step-forward\" />\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n\r\n\r\n\r\n\r\n            </React.Fragment>)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default confirm;","import React from 'react';\r\nimport { Icon, Typography } from 'antd';\r\nimport callFetch, { api } from '../../../services/UseFetch';\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nconst DownloadFiles = props => {\r\n\r\n    const DownloadCert = (url) => {\r\n        callFetch(url, 'GET').then(res => {\r\n            if (res !== null) {\r\n                window.location.href = api + url;\r\n            }          \r\n        });\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Title level={2}><Icon type=\"safety-certificate\" style={{ fontSize: 25 }} />&nbsp;\r\n            You are good to go</Title>\r\n            <Paragraph>\r\n                Congratulations! You have successfully create\r\n                 your private key and certificate. You can download them in the below section\r\n            </Paragraph>\r\n            <Title level={4}><span onClick={() => DownloadCert(api + 'main/certs/' + props.cert.certificate + '.cert.pem')} className=\"Link\">\r\n                <Icon type=\"download\" /> {props.cert.certificate + '.cert.pem'}</span></Title>\r\n            <Title level={4}><span onClick={() => DownloadCert(api + 'main/private/' + props.cert.certificate + '.key.pem')} className=\"Link\">\r\n                <Icon type=\"download\" /> {props.cert.privateKey + '.key.pem'}</span></Title>\r\n            <Paragraph>\r\n                You need to import the certificate below.\r\n                It containes the chain of trust with the root and intermediate certificate\r\n            </Paragraph>\r\n            <Title level={4}><span onClick={() => DownloadCert(api + 'main/csr/' + props.cert.certificate + '.csr.pem')} className=\"Link\">\r\n                <Icon type=\"download\" /> {props.cert.certificate + '.csr.pem'}</span></Title>\r\n        </React.Fragment >\r\n    );\r\n};\r\n\r\nexport default DownloadFiles;","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Steps from './certificate-steps/certificate-steps';\r\nimport Request from './request/Request';\r\nimport css from './Certificate.module.sass';\r\nimport PrivateKey from './privateKey/PrivateKey';\r\nimport Cert from './cert/Cert';\r\nimport Confirm from './confirmInfo/ConfirmInfo';\r\nimport DownloadFiles from './download-files/DownloadFiles'\r\nconst Certificate = props => {\r\n    const [step, setStep] = useState(0);\r\n    const [cert, setCert] = useState({\r\n        privateKey: '',\r\n        certificate: '',\r\n        expires: null,\r\n        duration: 1,\r\n        request: null\r\n    });\r\n    useEffect(() => {       \r\n    }, [cert]);\r\n\r\n    useEffect(() => {       \r\n    }, [step]);\r\n\r\n    const nextStepHandler = (step, data, name) => {\r\n        setCert({\r\n            ...cert,\r\n            [name]: data\r\n        });\r\n        setStep(step);\r\n    }\r\n\r\n    const finalStep = (step) => {\r\n        setStep(step);\r\n    }\r\n\r\n    const lastInfoHandler = (certificate, years) => {\r\n        var d = new Date();\r\n        var year = d.getFullYear();\r\n        const expires = new Date(year + years, d.getMonth(), d.getDate());\r\n        setCert({\r\n            ...cert,\r\n            expires: expires,\r\n            duration: years,\r\n            certificate: certificate\r\n        });\r\n        setStep(3)\r\n    }\r\n    let stepComponent;\r\n    switch (step) {\r\n        case 0:\r\n            stepComponent = <PrivateKey next={nextStepHandler} />;\r\n            break;\r\n        case 1:\r\n            stepComponent = <Request next={nextStepHandler} />;\r\n            break;\r\n        case 2:\r\n            stepComponent = <Cert next={lastInfoHandler} />;\r\n            break;\r\n        case 3:\r\n            stepComponent = <Confirm next={finalStep} cert={cert} />;\r\n            break;\r\n        case 4:\r\n            stepComponent = <DownloadFiles next={finalStep} cert={cert} />;\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return (\r\n        <Row className={css.Row}>\r\n            <Col span={12} offset={1}>\r\n                {stepComponent}\r\n            </Col>\r\n            <Col span={8} offset={3}>\r\n                <Steps step={step} />\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default Certificate;","import React, { useState, useEffect } from 'react';\r\nimport { List, Skeleton, Icon, Badge, Input, Popconfirm, message } from 'antd';\r\nimport callFetch, { api } from '../../services/UseFetch';\r\n\r\nconst Folder = (props) => {\r\n    const [files, setFiles] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const [pageSize, setPageSize] = useState(10);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        callFetch('main/ls/' + props.path, 'GET').then(res => {\r\n            if (res) {\r\n                setFiles(res);\r\n            }\r\n        });\r\n    }\r\n\r\n    const search = (value) => {\r\n        setSearchValue(value);\r\n    }\r\n    const DownloadCert = (url) => {\r\n        callFetch(url, 'GET').then(res => {\r\n            if (res !== null) {\r\n                window.location.href = api + url;\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    const calculateDataToDisplay = () => {\r\n        if (searchValue) {\r\n            return files.filter((file) => {\r\n                return file.toUpperCase().indexOf(searchValue.toUpperCase()) >= 0;\r\n            });\r\n        }\r\n        return files;\r\n    }\r\n\r\n    const deleteFile = (file) => {\r\n        callFetch('main/' + props.path + '/' + file, 'DELETE').then(res => {\r\n            if (res) {\r\n                message.info('Το αρχείο διαγράφτηκε επιτυχώς');\r\n                let filesCopy = [...files];\r\n                const index = filesCopy.findIndex((f) => file === f);\r\n                filesCopy.splice(index, 1);\r\n                setFiles(filesCopy);\r\n            }\r\n        });\r\n    }\r\n\r\n    const filesToDisplay = calculateDataToDisplay();\r\n\r\n    return (\r\n        <List\r\n            className=\"demo-loadmore-list\"\r\n            itemLayout=\"horizontal\"\r\n            dataSource={filesToDisplay}\r\n            pagination={{\r\n                showSizeChanger: true,\r\n                size: 'small',\r\n                pageSize: pageSize,\r\n                onShowSizeChange: (val, size) => { setPageSize(size) }\r\n            }}\r\n            header={<div>\r\n                <div>\r\n                    <strong>\r\n                        <Icon theme=\"twoTone\" twoToneColor=\"#f5cd00\" type=\"folder-open\" /> {'intermediate/' + props.path}\r\n                    </strong>\r\n                    <Badge count={files.length} className=\"filecounter\" />\r\n                </div>\r\n                <div>\r\n                    <Input.Search\r\n                        placeholder=\"Search file\"\r\n                        onSearch={search}\r\n                        className=\"IsFullwidth searchbar\" />\r\n                </div>\r\n            </div>}\r\n            renderItem={(item) => (\r\n                <List.Item actions={[\r\n                    <Popconfirm title=\"Είστε σίγουρος για την διαγραφή αρχείου?\" onConfirm={() => { deleteFile(item) }} okText=\"Yes\" cancelText=\"No\">\r\n                        <span className=\"Link\" title=\"Διαγραφή\"><Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" /></span>\r\n                    </Popconfirm>,\r\n                    <span className=\"Link\" onClick={() => DownloadCert('main/' + props.path + '/' + item)} title=\"Κατέβασμα\">\r\n                        <Icon type=\"download\" /></span>]}>\r\n                    <Skeleton avatar title={false} loading={false} >\r\n                        <List.Item.Meta title={item} />\r\n                    </Skeleton>\r\n                </List.Item>)}\r\n        />\r\n    );\r\n};\r\n\r\nexport default Folder;","import React from 'react';\r\nimport { Row, Col, Typography } from 'antd';\r\nimport Folder from './Folder';\r\nimport './FileManager.sass';\r\n\r\nconst { Text, Title } = Typography\r\nconst FileManager = () => {\r\n\r\n    return (\r\n        <React.Fragment >\r\n            <Row type=\"flex\" justify=\"space-around\" className=\"Section\">\r\n                <Col span={22}>\r\n                    <Title level={2}>Φάκελοι και αρχεία πιστοποιητικών</Title>\r\n                    <Text>Διαχείριση προσωπικών κλειδιών, αιτημάτων και πιστοποιητικών</Text>\r\n                </Col>\r\n                <Col span={6}>{<Folder path=\"private\" />}</Col>\r\n                <Col span={6}>{<Folder path=\"certs\" />}</Col>\r\n                <Col span={6}>{<Folder path=\"csr\" />}</Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default FileManager;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Typography, Table, Icon, Divider, Button, Popconfirm, message } from 'antd';\r\nimport moment from 'moment';\r\nimport callFetch, { api } from '../../../services/UseFetch';\r\n\r\nconst { Text, Title } = Typography\r\n\r\n\r\nconst INITIAL_PAGE = 1;\r\nconst INITIAL_PAGE_SIZE = 10;\r\nconst PAGINATION = {\r\n    defaultCurrent: INITIAL_PAGE,\r\n    defaultPageSize: INITIAL_PAGE_SIZE,\r\n    showSizeChanger: true,\r\n    showTotal: (total, range) => 'Βλέπετε ' + range[0] + ' έως ' + range[1] + ' από τις ' + total + ' εγγραφές'\r\n};\r\nconst lastPagination = {\r\n    page: null,\r\n    size: null,\r\n    sort: null\r\n};\r\n\r\n// Show icon if certificate expires soon\r\nconst Expires = (date) => {\r\n    var now = moment();\r\n    date = moment(date, 'DD/MM/YYYY HH:mm');\r\n    var diff = date.diff(now);\r\n    var diffDays = date.diff(now, 'days');\r\n\r\n    if (diff <= 0) {\r\n        return (<Icon type=\"warning\" className=\"ant-typography-danger\" />);\r\n\r\n    } else if (diffDays >= 0 && diffDays <= 30) {\r\n        return (<Icon type=\"clock-circle\" className=\"ant-typography-warning\" />);\r\n    }\r\n    return null;\r\n}\r\n\r\nconst ListCertificates = () => {\r\n\r\n    const columns = [{\r\n        title: 'Title',\r\n        dataIndex: 'certificate',\r\n        sorter: true,\r\n    },\r\n    {\r\n        title: 'Organization Name',\r\n        dataIndex: 'request.organization',\r\n        sorter: true,\r\n    },\r\n    {\r\n        title: 'Common Name',\r\n        dataIndex: 'request.cn',\r\n        sorter: true,\r\n    },\r\n    {\r\n        title: 'Date Issued',\r\n        dataIndex: 'created',\r\n        sorter: true,\r\n    },\r\n    {\r\n        title: 'Expiry Date',\r\n        dataIndex: 'expires',\r\n        sorter: true,\r\n        render: (date, cert) => (\r\n            <span>\r\n                {date} {Expires(date)}\r\n            </span>\r\n        ),\r\n    },\r\n    {\r\n        title: 'Action',\r\n        render: (text, cert) => (\r\n            <span>\r\n                <Button type=\"primary\" icon=\"download\" onClick={() => { DownloadCert(cert) }}></Button>\r\n                <Divider type=\"vertical\" />\r\n                <Popconfirm title=\"Are you sure?\" okText=\"Yes\" cancelText=\"No\" onConfirm={() => { DeleteCert(cert.id) }}>\r\n                    <Button type=\"danger\" icon=\"delete\"></Button>\r\n                </Popconfirm>\r\n            </span>\r\n        )\r\n    }];\r\n\r\n    const [cert, setCert] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getData(INITIAL_PAGE, INITIAL_PAGE_SIZE);\r\n    }, []);\r\n\r\n    const DeleteCert = (certId) => {\r\n        setLoading(true);\r\n        callFetch('certificates/' + certId, 'DELETE').then(res => {\r\n            if (res) {\r\n                message.info('Το αρχείο διαγράφτηκε επιτυχώς');\r\n                const pageToLoad = lastPagination.page > 0 && cert.length === 1 ? lastPagination.page - 1 : lastPagination.page;\r\n                getData(pageToLoad, lastPagination.size, lastPagination.sort);\r\n            } else {\r\n                errorCallBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    const DownloadCert = (cert) => {\r\n        callFetch('main/certs/' + cert.certificate + '.crt', 'GET').then(res => {\r\n            if (res !== null) {\r\n                window.location.href = api + 'main/certs/' + cert.certificate + '.crt';\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleTableChange = (pag, filters, sorter) => {\r\n        let sortField = '';\r\n        if (sorter && sorter.field) {\r\n            let subfields = sorter.field.split('.');\r\n            for (const subfield of subfields) {\r\n                sortField += (!sortField ? '' : '.') + subfield.substring(0, 1).toUpperCase() + subfield.substring(1);\r\n            }\r\n            sortField += ':' + sorter.order.replace('end', '');\r\n        }\r\n\r\n        getData(pag.current, pag.pageSize, sortField);\r\n    };\r\n\r\n    const getData = (page, size, sort) => {\r\n        lastPagination.page = page;\r\n        lastPagination.size = size;\r\n        lastPagination.sort = sort;\r\n\r\n        let queryParams = '?page=' + page + '&size=' + size + (sort ? '&sort=' + sort : '');\r\n        callFetch('certificates/paged' + queryParams, 'GET').then(res => {\r\n            setLoading(false);\r\n            if (res) {\r\n                setTotal(res.total);\r\n                setCert(res.content);\r\n            } else {\r\n                errorCallBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    const errorCallBack = (error) => {\r\n        setLoading(false);\r\n        setTotal(0);\r\n        setCert([]);\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"Section\">\r\n                <Col span={22} offset={1}>\r\n                    <Title level={2}><Icon style={{ fontSize: 25 }} type=\"file-protect\" /> Εκδομένα Πιστοποιητικά</Title>\r\n                    <Text>Προβολή πιστοποιητικών με λεπτομέριες</Text>\r\n                </Col>\r\n            </Row>\r\n            <Row >\r\n                <Col span={22} offset={1}>\r\n                    <Table\r\n                        columns={columns}\r\n                        rowKey={cert => cert.id}\r\n                        pagination={{ ...PAGINATION, total: total }}\r\n                        dataSource={cert}\r\n                        loading={loading}\r\n                        onChange={handleTableChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ListCertificates;","import React, { useState } from 'react';\r\nimport { Form, Icon, Input, Button, Typography, DatePicker, Row, Col, message } from 'antd';\r\nimport classes from './IssuedCerts.sass';\r\nimport callFetch from '../../services/UseFetch';\r\nconst { Title } = Typography;\r\nconst oldCertificate = props => {\r\n    const formItemLayout = {\r\n        labelCol: {\r\n            lg: { span: 24 },\r\n            xl: { span: 24 },\r\n        },\r\n        wrapperCol: {\r\n            lg: { span: 24 },\r\n            xl: { span: 24 },\r\n        },\r\n    };\r\n\r\n    // το object data:\r\n    const data = {\r\n        privateKey: '',\r\n        certificate: '',\r\n        expires: null,\r\n        owner: '',\r\n        unit: '',\r\n        request: {\r\n            country: '',\r\n            state: '',\r\n            locality: '',\r\n            organization: '',\r\n            cn: '',\r\n            email: ''\r\n        }\r\n    }\r\n    // το useState Hook:\r\n    const [certData, setCertData] = useState(data);\r\n    // το updateFieldHandler που εκτελείται στην onChange: \r\n    const updateFieldHandler = (e, type) => {\r\n        const field = type === 'text' ? e.target.name : type\r\n        setCertData({\r\n            ...certData,\r\n            [field]: type === 'text' ? e.target.value : e._d\r\n        })\r\n    };\r\n    const updateNestedFieldHandler = (e) => {\r\n        setCertData({\r\n            ...certData,\r\n            request: {\r\n                ...certData.request,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    };\r\n    const clearHandler = () => {\r\n        props.form.resetFields();\r\n    }\r\n    // το clickMe που εκτελείται στην onClick: \r\n    const submitHandler = () => {\r\n        props.form.validateFields((err, fieldsValue) => {\r\n            if (err) {\r\n                return;\r\n            }\r\n            callFetch('certificates/', 'POST', certData).then(res => {\r\n                if (res) {\r\n                    message.info('Το πιστοποιητικό καταγράφηκε!');\r\n                    clearHandler();\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    const { getFieldDecorator } = props.form;\r\n    return (\r\n        <Form {...formItemLayout} className=\"Section\">\r\n            <Row>\r\n                <Col span={22} offset={1}>\r\n                    <Title level={2}><Icon type=\"safety-certificate\" style={{ fontSize: 25 }} /> Εισαγωγή Πιστοποιητικού </Title>\r\n                </Col>\r\n            </Row>\r\n            <Row className={classes.Row}>\r\n                <Col span={10} offset={1}>\r\n                    <Form.Item label=\"Δώστε ένα όνομα για το Κλειδί\">\r\n                        {getFieldDecorator('PrivateKey', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα πιστοποιητικού. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"privateKey\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Όνομα Κλειδιού\"\r\n                                onChange={(e) => updateFieldHandler(e, 'text')} />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Δώστε ένα όνομα για το πιστοποιητικό\">\r\n                        {getFieldDecorator('Certificate', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα πιστοποιητικού. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"certificate\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Όνομα πιστοποιητικού\"\r\n                                onChange={(e) => updateFieldHandler(e, 'text')} />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Δώστε ένα όνομα Ιδιοκτήτη\">\r\n                        {getFieldDecorator('Owner', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα Ιδιοκτήτη. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"owner\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Όνομα Ιδιοκτήτη\"\r\n                                onChange={(e) => updateFieldHandler(e, 'text')} />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Μονάδα που χρησιμοποιείται:\">\r\n                        {getFieldDecorator('Unit', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα πιστοποιητικού. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"unit\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Μονάδα που χρησιμοποιείται\"\r\n                                onChange={(e) => updateFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Ημερομηνία Λήξης Πιστοποιητικού: \">\r\n                        {getFieldDecorator('Expires', { type: 'date', required: true, message: 'Παρακαλώ εισάγετε ημερομηνία' })(\r\n                            <DatePicker name=\"expires\" onChange={(e) => updateFieldHandler(e, 'expires')} />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <div style={{ marginTop: 30, float: 'right' }}>\r\n                            <Button type=\"danger\" onClick={clearHandler} style={{ marginRight: 8 }}>Εκκαθάριση Φόρμας</Button>\r\n                            <Button type=\"primary\" onClick={() => submitHandler()} className={classes.Button}>\r\n                                <Icon type=\"save\" />\r\n                                Αποθήκευση Πληροφοριών Πιστοποιητικού\r\n                                </Button>\r\n                        </div>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={10} offset={1}>\r\n\r\n                    <Form.Item label=\"Χώρα:\">\r\n                        {getFieldDecorator('country', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα Χώρας. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"country\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Χώρα\"\r\n                                onChange={(e) => updateNestedFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"State:\">\r\n                        {getFieldDecorator('state', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα State. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"state\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε State\"\r\n                                onChange={(e) => updateNestedFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Locality:\">\r\n                        {getFieldDecorator('locality', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει Locality. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"locality\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Μονάδα\"\r\n                                onChange={(e) => updateNestedFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Organization:\">\r\n                        {getFieldDecorator('organization', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει Organization. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"organization\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Organization\"\r\n                                onChange={(e) => updateNestedFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Common:\">\r\n                        {getFieldDecorator('cn', {\r\n                            rules: [{\r\n                                required: true,\r\n                                message: 'Δεν έχετε δώσει όνομα πιστοποιητικού. ',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"cn\"\r\n                                type=\"text\"\r\n                                placeholder=\"Εισαγάγετε Μονάδα\"\r\n                                onChange={(e) => updateNestedFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Email Address\">\r\n                        {getFieldDecorator('email', {\r\n                            rules: [{\r\n                                type: 'email', message: 'Δεν έχετε εισάγει έγκυρο Email',\r\n                            }, {\r\n                                required: true, message: 'Παρακαλώ εισάγετε ένα Email',\r\n                            }],\r\n                        })(\r\n                            <Input\r\n                                name=\"email\"\r\n                                addonBefore=\"@\"\r\n                                type=\"email\"\r\n                                placeholder=\"Εισάγετε Email\"\r\n                                onChange={(e) => updateNestedFieldHandler(e, 'text')}\r\n                            />\r\n                        )}\r\n                    </Form.Item>\r\n\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n// export default oldCertificate;\r\n\r\nconst IssuedCertificateForm = Form.create({ name: 'certificateForm' })(oldCertificate);\r\nexport default IssuedCertificateForm;","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Login from '../auth/Login/Login';\r\nimport Home from '../layout/Home';\r\nimport Certificate from '../certificates/certificate/Certificate';\r\nimport FileManager from '../components/filemanager/FileManager';\r\nimport ListCertificates from '../certificates/certificate/list-certificates/ListCertificates';\r\nimport IssuedCertificate  from '../certificates/issuedCertificate/IssuedCerts';\r\n\r\n\r\nexport const fullAccess = (\r\n    <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/certificate/new\" exact component={Certificate} />\r\n        <Route path=\"/cert/files\" exact component={FileManager} />\r\n        <Route path=\"/cert/certificates\" exact component={ListCertificates} />\r\n        <Route path=\"/certificate/issued\" exact component={IssuedCertificate} />\r\n        <Redirect to=\"/\" />\r\n    </Switch>\r\n);\r\n\r\nexport const unAuthorized = (\r\n    <Switch>\r\n        <Route path=\"/login\" exact component={Login} />\r\n        <Redirect to=\"/login\" />\r\n    </Switch>\r\n);","import React, { Suspense, useContext } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport classes from './App.module.sass';\r\nimport utcss from './styles/utilities.module.sass';\r\nimport LayoutContainer from './layout/Layout';\r\nimport { AuthContext } from './context/AuthContext';\r\nimport { fullAccess, unAuthorized } from './services/Routes';\r\n\r\nconst App = props => {\r\n  const authContext = useContext(AuthContext);\r\n  const routes = authContext.isAuthenticated ? fullAccess : unAuthorized;\r\n  const cssClass = [classes.App, utcss.IsFullheight]\r\n  return (\r\n    <LayoutContainer className={cssClass.join(' ')}>\r\n      <Suspense fallback={<p>Loading...</p>}>{routes}</Suspense>\r\n    </LayoutContainer>\r\n  )\r\n};\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useState } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport jwt from 'jsonwebtoken';\r\nimport storage from '../services/LocalStorage';\r\n\r\nconst tokenSuffix = 'token';\r\nconst sessionSuffix = 'auth';\r\n\r\nconst AuthProvider = props => {\r\n    const token = storage.get(tokenSuffix);\r\n    let session = storage.get(sessionSuffix);\r\n    const getSession = () => {\r\n        if (!session && token) {\r\n            session = jwt.decode(token)\r\n            storage.set(sessionSuffix, session);\r\n        }\r\n        return session;\r\n    }\r\n    const isExpired = () => {\r\n        const session = getSession();\r\n        const expired = session && session.exp * 1000 < new Date().valueOf();\r\n        return expired;\r\n    }\r\n    const initAuthentication = () => {\r\n        session = getSession();\r\n        const check = session && session.username && !isExpired();\r\n        return check;\r\n    }\r\n    const signIn = (token) => {\r\n        const session = jwt.decode(token)\r\n        storage.set(tokenSuffix, token)\r\n        storage.set(sessionSuffix, session)\r\n        setIsAuthenticated(true);\r\n    }\r\n    const signOut = () => {\r\n        storage.remove(tokenSuffix);\r\n        storage.remove(sessionSuffix);\r\n        setIsAuthenticated(false);\r\n    }\r\n    const [isAuthenticated, setIsAuthenticated] = useState(initAuthentication());\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isAuthenticated, signIn, signOut }} >\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthProvider\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './styles/index.sass';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport AuthProvider from './auth/AuthProvider';\r\nimport { LocaleProvider } from 'antd';\r\nimport el_GR from 'antd/lib/locale-provider/el_GR';\r\nimport moment from 'moment';\r\nimport 'moment/locale/el';\r\n\r\nmoment.locale('el');\r\n\r\nconst app = (\r\n    <BrowserRouter>\r\n        <AuthProvider>\r\n            <LocaleProvider locale={el_GR}>\r\n                <App />\r\n            </LocaleProvider>\r\n        </AuthProvider>\r\n    </BrowserRouter>\r\n);\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Toolbar_Menu__JM-Qu\",\"Menu_Item\":\"Toolbar_Menu_Item__1z7GL\",\"Menu_Item_hover\":\"Toolbar_Menu_Item_hover__1q-Ni\",\"Right\":\"Toolbar_Right__3Gk-T\",\"Header\":\"Toolbar_Header__3V_TA\"};"],"sourceRoot":""}